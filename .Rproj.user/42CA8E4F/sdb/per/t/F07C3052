{
    "collab_server" : "",
    "contents" : "#library(psych)\n#library(PerformanceAnalytics)  \nlibrary(xlsx)\nlibrary(tidyverse)\nlibrary(reshape2)\n\n\n# Combine results ---------------------------------------------------------\n\n\nfor( i in 1:length(lst.cl.info) ){\n  tmp.cl.info <- lst.cl.info[[i]]\n  print(nrow(tmp.cl.info))\n  tmp.cl.info$cl_group_id <- tmp.cl.info$cl_group_id + max(tib.cluster.info$cl_group_id)\n  tib.cluster.info <- union_all(tib.cluster.info , tmp.cl.info)\n}\nrm( tmp.cl.info )\n\ntib.cluster.info <- arrange(tib.cluster.info\n                            , exper_name\n                            , well_name\n                            , well_number\n                            , cl_group_id)\ntib.cluster.info$cl_info_id <- 1:nrow(tib.cluster.info)\n\n#spoiled tib.cluster.info / same data in bkp\n#tib.cluster.info.bkp <- tib.cluster.info\n\n# Add descriptive data ----------------------------------------------------\ntib.cluster.info <- tib.cluster.info.bkp\n\nexperiment.desc <- read.xlsx( file = 'Experiment_descriptions.xlsx', sheetIndex = 1, header = T  )\nexperiment.desc <- experiment.desc[,-1]\nexperiment.desc <-  melt( experiment.desc, id = c(1:5 ) )\nnames(experiment.desc)[c(6,7)] <- c( 'well_fullname', 'substance' )\nexperiment.desc <- experiment.desc[!is.na(experiment.desc$substance),]\nexperiment.desc$well_fullname <- as.character(experiment.desc$well_fullname)\nexperiment.desc$NOTE <- as.character(experiment.desc$NOTE)\nexperiment.desc$date <- as.character(experiment.desc$date)\nexperiment.desc$exper_name <- as.character(experiment.desc$exper_name)\nexperiment.desc <- as.tibble(experiment.desc)\n\ntib.cluster.info$well_fullname <- \n  paste0(tib.cluster.info$well_name\n         , as.integer(tib.cluster.info$well_number) )\n\ntib.cluster.info <- tib.cluster.info %>%\n  right_join(experiment.desc, by = c('exper_name', 'well_fullname')  )\n\ntib.cluster.info <- rename( tib.cluster.info, cl_cell_state = cl_position)\n\n\n# Cleaning ----------------------------------------------------------------\nlibrary(tidyverse)\n\ntib.cluster.info <- tib.cluster.info %>%\n  filter(   !is.na(cent_GRN_mean) \n            , !is.na(cent_RED_mean) \n            , !is.na(cent_GRN_med ) \n            , !is.na(cent_RED_med )  )\n\n# Define dead and alive groups of cells -----------------------------------\nlibrary(tidyverse)\n\ntib.cluster.info$cl_cell_state <- NA\n\ntib.cluster.info <-\n  union_all(\n    tib.cluster.info %>%\n      filter( is.na(cent_YEL_mean) ) %>%\n      mutate(cl_dist_from_zero = sqrt(cent_GRN_mean^2 + \n                                        cent_RED_mean^2) )\n    ,\n    tib.cluster.info %>%\n      filter( !is.na(cent_YEL_mean) ) %>%\n      mutate(cl_dist_from_zero = sqrt(cent_GRN_mean^2 + \n                                        cent_RED_mean^2 + \n                                        cent_YEL_mean^2) )\n  )\n\nlength(unique(tib.cluster.info$cl_group_id))\n\ntib.cl_info_id.alive <- tib.cluster.info %>%\n  group_by(cl_group_id) %>%\n  summarise( min_cl = min(cl_dist_from_zero)) %>%\n  inner_join( tib.cluster.info\n              , by = c('cl_group_id'='cl_group_id'\n                       , 'min_cl'='cl_dist_from_zero')  ) %>%\n  select( cl_info_id )\n\nvect.cl_info_id.alive <- pull(tib.cl_info_id.alive, cl_info_id )\nrm(tib.cl_info_id.alive)\n\ntib.cluster.info$cl_cell_state[tib.cluster.info$cl_info_id %in%\n                                 vect.cl_info_id.alive ] <- 'alive'\n\ntib.cluster.info$cl_cell_state[ is.na(tib.cluster.info$cl_cell_state) ] <- 'dead'\n\ntib.cluster.info$cl_dist_from_zero <- NULL\n\ntib.cluster.info <- tib.cluster.info %>%\n  group_by(cl_group_id, cl_cell_state) %>%\n  summarise( \n    cl_info_id = min( cl_info_id )\n    , exper_name = min( exper_name )\n    , well_name = min( well_name )\n    , well_number = min( well_number )\n    , cl_method = min( cl_method )\n    , cl_metric = min( cl_metric )\n    , cl_amount = min( cl_amount )\n    , cl_def_approach = min( cl_def_approach )\n    , dim_amount = min( dim_amount )\n    , cell_amount = min( cell_amount )\n    , cl_cell_amount = sum( cl_cell_amount )\n    , quality_Q1_mean = min( quality_Q1_mean )\n    , quality_Q2_mean = min( quality_Q2_mean )\n    , quality_Q3 = min( quality_Q3 )\n    , quality_Q1_med = min( quality_Q1_med )\n    , quality_Q2_med = min( quality_Q2_med )\n    , cl_radius_mean = sum( cl_radius_mean )\n    , cl_radius_med = sum( cl_radius_med )\n    , cl_variance_mean = sum( sqrt(cl_variance_mean) )^2\n    , cl_variance_med = sum( sqrt(cl_variance_med) )^2\n    , cent_GRN_mean = mean( cent_GRN_mean )\n    , cent_RED_mean = mean( cent_RED_mean )\n    , cent_YEL_mean = mean( cent_YEL_mean )\n    , var_GRN_mean = sum( sqrt(var_GRN_mean) )^2\n    , var_RED_mean = sum( sqrt(var_RED_mean) )^2\n    , var_YEL_mean = sum( sqrt(var_YEL_mean) )^2\n    , cent_GRN_med = mean( cent_GRN_med )\n    , cent_RED_med = mean( cent_RED_med )\n    , cent_YEL_med = mean( cent_YEL_med )\n    , var_GRN_med = sum( sqrt(var_GRN_med) )^2\n    , var_RED_med = sum( sqrt(var_RED_med) )^2\n    , var_YEL_med = sum( sqrt(var_YEL_med) )^2\n    , well_fullname = min( well_fullname )\n    , date = min( date )\n    , pretr_time = min( pretr_time )\n    , tr_time = min( tr_time )\n    , NOTE = min( NOTE )\n    , substance = min( substance )\n  )\n\ntib.cluster.info$cl_info_id <- 1:nrow(tib.cluster.info)\n\n# Prepare tibble for analysis ---------------------------------------------\n\ntib.cell.surv <- tib.cluster.info %>%\n  filter( cl_cell_state == 'alive' ) %>%\n  select(\n      cell_surv_id = cl_info_id\n    , exper_name\n    , well_name\n    , well_number\n    , cl_method\n    , cl_metric\n    , cl_amount\n    , cl_def_approach\n    , dim_amount\n    , cell_amount\n    , alive_cells_amount = cl_cell_amount\n    , cl_group_id\n    , quality_Q1_mean\n    , quality_Q2_mean\n    , quality_Q3\n    , quality_Q1_med\n    , quality_Q2_med\n    , well_fullname\n    , date\n    , pretr_time\n    , tr_time\n    , NOTE\n    , substance\n  ) %>%\n  inner_join(\n    tib.cluster.info %>%\n      filter( cl_cell_state == 'dead' ) %>%\n      select(cl_group_id, dead_cells_amount = cl_cell_amount)\n    , by = 'cl_group_id'\n  ) %>%\n  mutate(   alive_cells_perc = alive_cells_amount/cell_amount\n          , dead_cells_perc = dead_cells_amount/cell_amount)\n\ntib.cell.surv <- ungroup(tib.cell.surv)\n\n#tib.cell.surv$NOTE[is.na(tib.cell.surv$NOTE)] <- 'replicable'\n\n#tib.cell.surv <- tib.cell.surv.bkp\ntib.cell.surv <-\n  tib.cell.surv %>%\n  filter(NOTE=='replicable')\n\n\n\nsort(unique(tib.cell.surv$substance))\nsubstance.order <- \n  c(1,39,35,40,36,37,38,41,33,34,2,14 # 13\n    ,20,18,21,17,19,22,16,15,23,27,31,28,29,30 # 27\n    ,32,25,26,24,9,10,12,11,13,3,7,6,8,5,4)\nsort(unique(tib.cell.surv$substance))[substance.order]\n\ntib.cell.surv$substance <-\n  factor(tib.cell.surv$substance\n         , levels = sort(unique(tib.cell.surv$substance))[substance.order]\n         , ordered = T )\n",
    "created" : 1534704178623.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "703095274",
    "id" : "F07C3052",
    "lastKnownWriteTime" : 1538350224,
    "last_content_update" : 1538350224101,
    "path" : "D:/1_Work/PROJECTS/Side_projects/RPr_Cell_Survival_Analysis/postprocessing.R",
    "project_path" : "postprocessing.R",
    "properties" : {
        "docOutlineVisible" : "1",
        "tempName" : "Untitled3"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}