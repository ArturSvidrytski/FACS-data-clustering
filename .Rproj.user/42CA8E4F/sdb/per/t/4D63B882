{
    "collab_server" : "",
    "contents" : "library(ggplot2)\nlibrary(dplyr)\nlibrary(PerformanceAnalytics)\n\nhist( tib.cluster.info$cent_GRN_mean - tib.cluster.info$cent_GRN_med, breaks = 30 )\nhist( tib.cluster.info$cent_YEL_mean - tib.cluster.info$cent_YEL_med, breaks = 30 )\nhist( tib.cluster.info$cent_RED_mean - tib.cluster.info$cent_RED_med, breaks = 30 )\n\npairs( tib.cluster.info[, c(12,13,14)] )\nsystem.time({pairs.panels(tib.cluster.info[1:4e4, c(12,13,14)], scale = TRUE, ellipses = T, lm = T, density = T )})\nsystem.time( {chart.Correlation(tib.cluster.info[1:4e4, c(12,13,14)], histogram = TRUE) })\n\n\n\nunique(tib.cell.surv$substance)\n\nungroup(tib.cell.surv)\ntib.cell.surv %>%\n  dplyr::filter( substance == '0'\n                 , tr_time == 16\n                 , NOTE == 'not_replicable') %>%\n  summarise( count = length( tr_time ))\n\n\n\n\n# plot --------------------------------------------------------------------\n\nsort(unique(tib.cell.surv$substance))\n\nggplot( tib.cell.surv %>%\n          dplyr::filter( substance %in% c('g5'\n                                        , 'g5+p5'\n                                        , 'g5+p10'\n                                        , 'g5+p100'\n                                        , 'g5+p150'\n                                        , 'g5+p250'\n                                        , 'g5+p50'\n                                        , 'g5+p500'\n                                        )\n                      #   , tr_time %in% c(16)\n                         , cl_def_approach %in% c('no_ajustment', 'm2')\n                         , !(cl_method %in% c('median', 'mcquitty', 'centroid', 'average', 'complete') )\n                         , cl_amount %in% c(2, 3)\n                         , dim_amount %in% c(2,3)\n                         )\n        , aes( as.factor(substance) , dead_cells_perc)\n          ) +\n  geom_violin(fill = \"grey80\"\n              , colour = \"black\"\n              , draw_quantiles = c(0.25, 0.5, 0.75)) +\n  geom_jitter( aes( colour = cl_method )) +\n  ylim(0,1)\n\n  \n\n# plot 3 ------------------------------------------------------------------\n\nggplot( tib.cell.surv %>%\n          dplyr::filter( 1==1\n          #  substance %in% c('g8')\n          #   , tr_time %in% c(16)\n          , pretr_time == 0\n          , cl_def_approach %in% c('!no_ajustment', 'm2')\n          , !(cl_method %in% c('median', 'mcquitty', 'centroid', 'average', 'complete') )\n          , cl_amount %in% c(2, 3)\n          , dim_amount %in% c(2,3)\n          )\n        , aes( substance , dead_cells_perc)\n) +\n  geom_violin(fill = \"grey80\"\n              , colour = \"black\"\n              , draw_quantiles = c(0.25, 0.5, 0.75)) +\n  geom_jitter( size = 1.5, aes( shape = tr_time, color = exper_name )) +\n  #scale_color_gradient2(midpoint = 13, low=\"blue\", mid = 'white', high=\"red\") +\n  ylim(0,1) +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  stat_summary(fun.y=median, geom=\"line\", aes(group=1))  + \n  stat_summary(fun.y=median, geom=\"point\")\n\nggsave(filename = 'overview.png', device = 'png', width = 28, height = 14)\n  \n  \n# plot 2 ------------------------------------------------------------------\n\nchart.Correlation(tib.cell.surv %>%\n                    select( quality_Q1_mean\n                            , quality_Q2_mean\n                            , quality_Q3\n                            , dead_cells_perc\n                            , dead_cells_amount)\n                    , histogram = TRUE)\n\n\nchart.Correlation(cbind(tib.cell.surv %>%\n                    filter( cl_amount == 2\n                            , cl_def_approach %in% c('no_ajustment', 'm2')\n                            , !(cl_method %in% c('median', 'mcquitty', 'centroid', 'average', 'complete') )\n                            ) %>%\n                    select( dead_cells_amount)\n                  , tib.cell.surv %>%\n                    filter( cl_amount == 3\n                            , cl_def_approach %in% c('no_ajustment', 'm2')\n                            , !(cl_method %in% c('median', 'mcquitty', 'centroid', 'average', 'complete') )\n                            ) %>%\n                    select( dead_cells_amount) )\n                  , histogram = TRUE)\n\n\n# dsfa --------------------------------------------------------------------\n",
    "created" : 1534709278419.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3449924500",
    "id" : "4D63B882",
    "lastKnownWriteTime" : 1538392067,
    "last_content_update" : 1538392067478,
    "path" : "D:/1_Work/PROJECTS/Side_projects/RPr_Cell_Survival_Analysis/analysis.R",
    "project_path" : "analysis.R",
    "properties" : {
        "tempName" : "Untitled5"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}